#include <conio.h>
#include <stdio.h>
#include <stdlib.h>
#include <iostream>
#include <ctype.h>
#include <io.h>
#include <string.h>
#include <dos.h>

using namespace std;

struct dadosA //definicao da estrutura dos registros do arquivo
{
    int matricula;
    char nome[20];    //campo do registro
    int idade;        //campo do registro
    float N1, N2, N3; //campos do registro
    float Media;      //campo do registro
    char Endereco[50];
    int fone;
    char email[30];
} Aluno; // nome da estrutura do registro

struct dadosF //definicao da estrutura dos registros do arquivo
{
    int cod_prof;
    char nomeprof[20]; //campo do registro
    int idadeprof;     //campo do registro
    char Enderecoprof[50];
    int foneprof;
    char emailprof[30];
} Professor;

FILE *fAlunos;      // declaracao do arquivo alunos
FILE *fAlunosAux;   // declaracao do arquivo alunos auxiliar para exccluir registro
FILE *fProfessores; // declaracao do arquivo Professores
FILE *fProfessoresAux;

char op;      // declaracao variavael op - opcao
int tam, opc; // declaracao variavael opc - opcao e tam - tamanho
// f significa file - arquivo
void cria_fAlunos()
{ //declaro e abre funcao de criacao do arquivo alunos
    if ((fAlunos = fopen("Alunos.dat", "a")) == NULL)
    {                                         //cria e abre o arquivo
        system("cls");                        //sistemas cls - clear screen - limpa tela
        printf("Erro de criacao de arquivo"); //imprimir na tela
        return;                               // retorna ao inicio da funcao cria_fAlunos
    }
    printf("Arquivo Criado"); //imprime na tela
    fclose(fAlunos);          //fecha arquivo fAlunos
}

void cria_fAlunosAux() //declaro e abre funcao de criacao do arquivo alunos Aux
{
    if ((fAlunosAux = fopen("AlunosAux.dat", "a")) == NULL) //cria e abre o arquivo
    {
        system("cls");                        //sistemas cls - clear screen - limpa tela
        printf("Erro de criacao do arquivo"); //imprimir na tela
        return;                               // retorna ao inicio da funcao cria_fAlunosAux
    }
    printf("Arquivo Criado"); //imprime na tela
    fclose(fAlunosAux);       //fecha arquivo fAlunosAux
} //fecha funcao cria_fAlunosAux

void cria_fProfessores()
{ //declaro e abre funcao de criacao do arquivo professores
    if ((fProfessores = fopen("Professores.dat", "a")) == NULL)
    {                                         //cria e abre o arquivo
        system("cls");                        //sistemas cls - clear screen - limpa tela
        printf("Erro de criacao de arquivo"); //imprimir na tela
        return;                               // retorna ao inicio da funcao cria_fAlunos
    }                                         //fechando a { do if
    printf("Arquivo Criado");                 //imprime na tela
    fclose(fProfessores);                     //fecha arquivo fProfessores
} //fecha funcao cria_fProfessore

void cria_fProfessoresAux() //declaro e abre funcao de criacao do arquivo Professores Aux
{
    if ((fProfessoresAux = fopen("ProfessoresAux.dat", "a")) == NULL) //cria e abre o arquivo
    {
        system("cls");                        //sistemas cls - clear screen - limpa tela
        printf("Erro de criacao do arquivo"); //imprimir na tela
        return;                               // retorna ao inicio da funcao cria_fProfessoresAux
    }
    printf("Arquivo Criado"); //imprime na tela
    fclose(fAlunosAux);       //fecha arquivo fPorfessoresAux
}
void cadastraAlunos() //funcao cadastra alunos
{
    system("cls");
    int tamanho = 0;                     //declaro e inicialiazo variavel tamanho - ter controle de qtidade de registros
    fAlunos = fopen("Alunos.dat", "r+"); //abro o arquivo r - read e + write
    rewind(fAlunos);                     //aponta para o primeiro registro do arquivo
    do
    {                                             //laco de repeticao
        fread(&Aluno, sizeof(Aluno), 1, fAlunos); //& ponteiro para o registro da HD para o edereco da RAM
        //leitura do do registro do arquivo para a RAM
        tamanho++;
    }                       // contador de registros - qtos registros tem
    while (!feof(fAlunos)); //final do laco feof file end on file  - atÃ© o ultimo registro

    fseek(fAlunos, sizeof(Aluno), tamanho);
    do
    {
        system("cls");
        printf("\nDigite a matricula do Aluno:");
        cin >> Aluno.matricula;
        printf("\nDigite o nome do Aluno:");
        cin >> Aluno.nome;
        printf("Digite a idade:");
        cin >> Aluno.idade;
        printf("Digite a N1:");
        cin >> Aluno.N1;
        printf("Digite a N2:");
        cin >> Aluno.N2;
        printf("Digite a N3:");
        cin >> Aluno.N3;
        Aluno.Media = (Aluno.N1 + Aluno.N2 + Aluno.N3) / 3;
        printf("\nDigite o endereco do nome:");
        cin >> Aluno.Endereco;
        printf("\nDigite o fone do Aluno:");
        cin >> Aluno.fone;
        printf("\nDigite o e-mail do Aluno:");
        cin >> Aluno.email;
        tamanho = tamanho + fwrite(&Aluno, sizeof(struct dadosA), 1, fAlunos);
        printf("\nContinuar cadastrando<s> ou <n>:");
        cin >> op;
        op = toupper(op);
    } while (op == 'S');
    fclose(fAlunos);
}
// colocar tds as funcs acima

void menu()
{
    system("cls");
    printf("Menu de opcoes");
    printf("\n");
    printf("13 - Sair\n");
    printf("Digite uma opcao\n");
    cin >> opc;
    switch (opc)
    {
    case 1:
        cadastraAlunos();
        break;

    case 13:
        exit(0);
    }
}

main()
{
    system("cls");
    opc = 1;
    do{
        menu();
    }while (opc !=13);

    
}
